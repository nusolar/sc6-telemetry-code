// Generated by CoffeeScript 1.6.3
(function() {
  var namespace,
    __slice = [].slice;

  namespace = function(target, name, block) {
    var item, top, _i, _len, _ref, _ref1;
    if (arguments.length < 3) {
      _ref = [(typeof exports !== 'undefined' ? exports : window)].concat(__slice.call(arguments)), target = _ref[0], name = _ref[1], block = _ref[2];
    }
    top = target;
    _ref1 = name.split('.');
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      item = _ref1[_i];
      target = target[item] || (target[item] = {});
    }
    return block(target, top);
  };

  window.MainTable = function($scope, $timeout) {
    var timer_id,
      _this = this;
    $scope.Signals = {
      Off: 0,
      Left: 1,
      Right: 2,
      Hazards: 3
    };
    $scope.signals_btn = $scope.Signals.Off;
    $scope.headlights_btn = false;
    $scope.horn_btn = false;
    $scope.motor_btn = false;
    $scope.reverse_btn = false;
    $scope.commands = {
      signals: 0,
      headlights: 0,
      horn: 0,
      drive: 0,
      reverse: 0
    };
    $scope.set_panel_button = function(panel) {
      var _this = this;
      $scope.map_btn = false;
      $scope.sensors_btn = false;
      $scope.drive_btn = false;
      $scope.camera_btn = false;
      if (panel) {
        return $timeout((function() {
          $scope.current_panel = panel;
          return $scope[$scope.current_panel] = true;
        }), 1);
      }
    };
    $scope.set_panel_button('sensors_btn');
    $scope.Left = function() {
      if ($scope.signals_btn === $scope.Signals.Left) {
        $scope.signals_btn = $scope.Signals.Off;
      } else {
        $scope.signals_btn = $scope.Signals.Left;
      }
      return $scope.commands.signals = $scope.signals_btn;
    };
    $scope.Right = function() {
      if ($scope.signals_btn === $scope.Signals.Right) {
        $scope.signals_btn = $scope.Signals.Off;
      } else {
        $scope.signals_btn = $scope.Signals.Right;
      }
      return $scope.commands.signals = $scope.signals_btn;
    };
    $scope.Hazards = function() {
      if ($scope.signals_btn === $scope.Signals.Hazards) {
        $scope.signals_btn = $scope.Signals.Off;
      } else {
        $scope.signals_btn = $scope.Signals.Hazards;
      }
      return $scope.commands.signals = $scope.signals_btn;
    };
    $scope.Headlights = function() {
      $scope.headlights_btn = !$scope.headlights_btn;
      return $scope.commands.headlights = $scope.headlights_btn ? 1 : 0;
    };
    $scope.SetHorn = function(horn_bool) {
      $scope.horn_btn = horn_bool;
      return $scope.commands.horn = horn_bool ? 1 : 0;
    };
    $scope.Map = function() {
      return $scope.set_panel_button('map_btn');
    };
    $scope.Sensors = function() {
      return $scope.set_panel_button('sensors_btn');
    };
    $scope.Drive = function() {
      return $scope.set_panel_button('drive_btn');
    };
    $scope.Camera = function() {
      return $scope.set_panel_button('camera_btn');
    };
    $scope.Motor = function() {
      $scope.motor_btn = !$scope.motor_btn;
      $scope.commands.drive = $scope.motor_btn ? 1 : 0;
      if ($scope.reverse_btn) {
        return $scope.Reverse();
      }
    };
    $scope.Reverse = function() {
      if ($scope.commands.drive) {
        $scope.reverse_btn = !$scope.reverse_btn;
        return $scope.commands.reverse = $scope.reverse_btn ? 1 : 0;
      } else {
        $scope.reverse_btn = false;
        return $scope.commands.reverse = 0;
      }
    };
    return timer_id = setInterval((function() {
      return $scope.$apply(function() {
        $scope.query_string = $.param($scope.commands);
        return $.ajax({
          url: 'http://localhost:8080/data.json',
          dataType: 'jsonp',
          data: $scope.commands,
          success: function(json) {
            return $scope.commands;
          }
        });
      });
    }), 100);
  };

}).call(this);
